1+101
setwd("~/HONOURS/9-1-16transferfromusb")
getwd()
source('~/HONOURS/9-1-16transferfromusb/ComparasionDESeqofCavin.r')
Upregshared
c
c1
source('~/HONOURS/9-1-16transferfromusb/ComparasionDESeqofCavin.r')
rawdataPC3<- rawdataPC3[c(31:42)]
Cav2PN4= rawdataPC3[c(3, 7, 11 ,1, 5, 10)]
Cav1PN4= rawdataPC3[c(2, 6, 10, 1, 5, 10)]
#CaveolinPN4= rawdata[c(3, 8, 13, 1, 5, 14)]
Cav3PN4= rawdataPC3[c(4, 8, 12, 1, 5, 10)]
# Filtering and Normalization
# compute the effective library size by using TMM normalization
#Analysis for Cavin1
exp_designCav1 = data.frame(row.names = colnames(Cav1PN4),
condition =c("Test", "Test", "Test", "Cont", "Cont", "Cont"),
libType = c("paired-end", "paired-end", "paired-end", "paired-end", "paired-end", "paired-end"))
condition= relevel(exp_designCav1$condition, "Test")
levels(exp_designCav1)
head(exp_designCav1)
ddsCav1=DESeqDataSetFromMatrix(countData=Cav1PN4, colData=exp_design, design=~condition)
ddsCav1=DESeq(ddsCav1)
resCav1= results(ddsCav1, alpha=0.05)
#for Cavin 2
exp_designCav2 = data.frame(row.names = colnames(Cav2PN4),
condition =c("Test", "Test", "Test", "Cont", "Cont", "Cont"),
libType = c("paired-end", "paired-end", "paired-end", "paired-end", "paired-end", "paired-end"))
condition= relevel(exp_designCav2$condition, "Test")
levels(exp_designCav2)
head(exp_designCav2)
ddsCav2=DESeqDataSetFromMatrix(countData=Cav2PN4, colData=exp_design, design=~condition)
ddsCav2=DESeq(ddsCav2)
resCav2= results(ddsCav2, alpha=0.05)
#For Cavin3
exp_designCav3 = data.frame(row.names = colnames(Cav3PN4),
condition =c("Test", "Test", "Test", "Cont", "Cont", "Cont"),
libType = c("paired-end", "paired-end", "paired-end", "paired-end", "paired-end", "paired-end"))
condition= relevel(exp_designCav3$condition, "Test")
levels(exp_designCav3)
head(exp_designCav3)
ddsCav3=DESeqDataSetFromMatrix(countData=Cav3PN4, colData=exp_design, design=~condition)
ddsCav3=DESeq(ddsCav3)
resCav3= results(ddsCav3, alpha=0.05)
#comparing the increase between cavins.
a<- resCav1$log2FoldChange
a1 = which(a>0)
a<-rownames(rawdataPC3)[a1]
b<- resCav2$log2FoldChange
b1 = which(b>0)
b<-rownames(rawdataPC3)[b1]
c<- resCav3$log2FoldChange
c1 = which(c>0)
c<-rownames(rawdataPC3)[c1]
Upregshared<- unique(c[c%in%a[a%in%b]])
resCav1= results(ddsCav1, alpha=0.05)
exp_designCav1 = data.frame(row.names = colnames(Cav1PN4),
condition =c("Test", "Test", "Test", "Cont", "Cont", "Cont"),
libType = c("paired-end", "paired-end", "paired-end", "paired-end", "paired-end", "paired-end"))
condition= relevel(exp_designCav1$condition, "Test")
levels(exp_designCav1)
head(exp_designCav1)
ddsCav1=DESeqDataSetFromMatrix(countData=Cav1PN4, colData=exp_design, design=~condition)
exp_designCav1 = data.frame(row.names = colnames(Cav1PN4),
condition =c("Test", "Test", "Test", "Cont", "Cont", "Cont"),
libType = c("paired-end", "paired-end", "paired-end", "paired-end", "paired-end", "paired-end"))
condition= relevel(exp_designCav1$condition, "Test")
levels(exp_designCav1)
head(exp_designCav1)
ddsCav1=DESeqDataSetFromMatrix(countData=Cav1PN4, colData=exp_designCav1, design=~condition)
ddsCav1=DESeq(ddsCav1)
resCav1= results(ddsCav1, alpha=0.05)
#for Cavin 2
exp_designCav2 = data.frame(row.names = colnames(Cav2PN4),
condition =c("Test", "Test", "Test", "Cont", "Cont", "Cont"),
libType = c("paired-end", "paired-end", "paired-end", "paired-end", "paired-end", "paired-end"))
condition= relevel(exp_designCav2$condition, "Test")
levels(exp_designCav2)
head(exp_designCav2)
ddsCav2=DESeqDataSetFromMatrix(countData=Cav2PN4, colData=exp_designCav2, design=~condition)
ddsCav2=DESeq(ddsCav2)
resCav2= results(ddsCav2, alpha=0.05)
#For Cavin3
exp_designCav3 = data.frame(row.names = colnames(Cav3PN4),
condition =c("Test", "Test", "Test", "Cont", "Cont", "Cont"),
libType = c("paired-end", "paired-end", "paired-end", "paired-end", "paired-end", "paired-end"))
condition= relevel(exp_designCav3$condition, "Test")
levels(exp_designCav3)
head(exp_designCav3)
ddsCav3=DESeqDataSetFromMatrix(countData=Cav3PN4, colData=exp_designCav3, design=~condition)
ddsCav3=DESeq(ddsCav3)
resCav3= results(ddsCav3, alpha=0.05)
#comparing the increase between cavins.
a<- resCav1$log2FoldChange
a1 = which(a>0)
a<-rownames(rawdataPC3)[a1]
b<- resCav2$log2FoldChange
b1 = which(b>0)
b<-rownames(rawdataPC3)[b1]
c<- resCav3$log2FoldChange
c1 = which(c>0)
c<-rownames(rawdataPC3)[c1]
Upregshared<- unique(c[c%in%a[a%in%b]])
Upregshared
aSig= which(resCav1$pvalue>0.05)
aSig
aSig= rownames(rawdataPC3)[which(resCav1$pvalue>0.05)]
aSig
bSig= rownames(rawdataPC3)[which(resCav2$pvalue>0.05)]
cSig= rownames(rawdataPC3)[which(resCav3$pvalue>0.05)]
Sig0.05<- unique(cSig[cSig%in%aSig[aSig%in%bSig]])
Sig0.05Upreg<- unique(Upregshared[Upregshared%in%Sig0.05])
Sig0.05Upreg
a<- resCav1$log2FoldChange
a1 = which(a>0)
aSig= rownames(rawdataPC3)[which(resCav1$pvalue<0.05)]
a<-rownames(rawdataPC3)[a1]
b<- resCav2$log2FoldChange
b1 = which(b>0)
b<-rownames(rawdataPC3)[b1]
bSig= rownames(rawdataPC3)[which(resCav2$pvalue<0.05)]
c<- resCav3$log2FoldChange
c1 = which(c>0)
c<-rownames(rawdataPC3)[c1]
cSig= rownames(rawdataPC3)[which(resCav3$pvalue<0.05)]
Upregshared<- unique(c[c%in%a[a%in%b]])
Sig0.05<- unique(cSig[cSig%in%aSig[aSig%in%bSig]])
Sig0.05Upreg<- unique(Upregshared[Upregshared%in%Sig0.05])
Sig0.05Upreg
Upregshared
"hsa-miR-574-3p"%in%Upregshared
"hsa-miR-574-5p"%in%Upregshared
Sig0.05Downreg<- unique(Downregshared[Downregshared%in%Sig0.05])
a<- resCav1$log2FoldChange
a1 = which(a<0)
a<-rownames(rawdataPC3)[a1]
b<- resCav2$log2FoldChange
b1 = which(b<0)
b<-rownames(rawdataPC3)[b1]
c<- resCav3$log2FoldChange
c1 = which(c<0)
c<-rownames(rawdataPC3)[c1]
Downregshared<- unique(c[c%in%a[a%in%b]])
Sig0.05Downreg<- unique(Downregshared[Downregshared%in%Sig0.05])
Sig0.05Downreg
Sig0.05Upreg
View(rawdataPC3)
View(rawdataPC3)
View(Cav1PN4)
View(Cav1PN4)
?write.txt
lapply(Sig0.05Downreg, write, "AllCavinPC3PalletPval0.05DOWN.txt", append=TRUE, ncolumns=1000)
View(rawdata)
source('~/HONOURS/9-1-16transferfromusb/ComparasionDESeqofCavin.r')
source('~/HONOURS/9-1-16transferfromusb/ComparasionDESeqofCavin.r')
View(Cav1PN4)
View(Cav1PN4)
a
cSig
Sig0.05Upreg
Sig0.05Downreg
Sig0.05
bSig
cSig
Upregshared
aSig
bSig
cSig
Upregshared
length(Upregshared)
"hsa-miR-574"%in%"hsa-miR-574-3p"
"hsa-miR-574-3p"%in%Upregshared
"hsa-miR-574-5p"%in%Upregshared
"hsa-miR-574-6p"%in%Upregshared
"hsa-miR-363-3p"%in%Downregshared
"hsa-miR-363-5p"%in%Downregshared
Downregshared
"hsa-miR-574-3p"%in%Upregshared
resCav1$pvalue["hsa-miR-574-3p"]
resCav2$pvalue["hsa-miR-574-3p"]
resCav2$pvalue[hsa-miR-574-3p]
resCav2["hsa-miR-574-3p", pvalue]
resCav2$pvalue
resCav2$pvalue["hsa-miR-421-3p"]
resCav2$pvalue("hsa-miR-421-3p")
resCav2$pvalue[8]
match("hsa-miR-574-3p", rownames(resCav1))
resCav2$pvalue[576]
rownames(resCav2$pvalue[576])
rownames(resCav2[576])
resCav2[576]
rawdata[576]
rownames(rawdata[576])
rownames(rawdata)
rownames(rawdata)[578]
rownames(rawdata)[576]
resCav2$pvalue[576]
match("hsa-miR-574-5p", rownames(resCav1))
resCav2$pvalue[464]
resCav2$pvalue("hsa-miR-421-3p")
"hsa-miR-363-3p"%in%Downregshared
"hsa-miR-363-5p"%in%Downregshared
